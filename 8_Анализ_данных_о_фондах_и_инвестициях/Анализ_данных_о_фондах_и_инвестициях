1. Посчитайте, сколько компаний закрылось.

\```python
SELECT COUNT(status)
FROM company
WHERE status = 'closed'
\```

2. Отобразите количество привлечённых средств для новостных компаний США. Используйте данные из таблицы company. Отсортируйте таблицу по убыванию значений в поле funding_total .

\```python
SELECT funding_total 
FROM company
WHERE category_code = 'news' AND country_code = 'USA'
ORDER BY funding_total DESC
\```

3. Найдите общую сумму сделок по покупке одних компаний другими в долларах. Отберите сделки, которые осуществлялись только за наличные с 2011 по 2013 год включительно.

SELECT SUM(price_amount)
FROM acquisition
WHERE EXTRACT(YEAR FROM acquired_at) BETWEEN 2011 AND 2013 AND term_code = 'cash'

4. Отобразите имя, фамилию и названия аккаунтов людей в твиттере, у которых названия аккаунтов начинаются на 'Silver'.
SELECT first_name,last_name,twitter_username
FROM people
WHERE  twitter_username LIKE 'Silver%'

5. Выведите на экран всю информацию о людях, у которых названия аккаунтов в твиттере содержат подстроку 'money', а фамилия начинается на 'K'.
SELECT *
FROM people
WHERE twitter_username LIKE '%money%' AND last_name LIKE 'K%'

6. Для каждой страны отобразите общую сумму привлечённых инвестиций, которые получили компании, зарегистрированные в этой стране. Страну, в которой зарегистрирована компания, можно определить по коду страны. Отсортируйте данные по убыванию суммы.
SELECT country_code, SUM(funding_total)
FROM company
GROUP BY country_code
ORDER BY 2 DESC

7. Составьте таблицу, в которую войдёт дата проведения раунда, а также минимальное и максимальное значения суммы инвестиций, привлечённых в эту дату. Оставьте в итоговой таблице только те записи, в которых минимальное значение суммы инвестиций не равно нулю и не равно максимальному значению.

SELECT funded_at,
MIN(raised_amount),
MAX(raised_amount)
FROM funding_round
GROUP BY funded_at
HAVING MIN(raised_amount) != MAX(raised_amount) AND MIN(raised_amount) != 0

8. Создайте поле с категориями:
Для фондов, которые инвестируют в 100 и более компаний, назначьте категорию high_activity.
Для фондов, которые инвестируют в 20 и более компаний до 100, назначьте категорию middle_activity.
Если количество инвестируемых компаний фонда не достигает 20, назначьте категорию low_activity.
Отобразите все поля таблицы fund и новое поле с категориями.

SELECT *,
CASE
WHEN invested_companies >= 100 THEN 'high_activity'
WHEN invested_companies >= 20 and invested_companies <100 THEN 'middle_activity'
WHEN invested_companies < 20 THEN  'low_activity'
END
FROM fund

9. Для каждой из категорий, назначенных в предыдущем задании, посчитайте округлённое до ближайшего целого числа среднее количество инвестиционных раундов, в которых фонд принимал участие. Выведите на экран категории и среднее число инвестиционных раундов. Отсортируйте таблицу по возрастанию среднего.
SELECT 
       CASE
           WHEN invested_companies>=100 THEN 'high_activity'
           WHEN invested_companies>=20 THEN 'middle_activity'
           ELSE 'low_activity'
       END AS activity,
       ROUND(AVG(investment_rounds))
FROM fund
GROUP BY activity
ORDER BY 2


10. Проанализируйте, в каких странах находятся фонды, которые чаще всего инвестируют в стартапы. 
Для каждой страны посчитайте минимальное, максимальное и среднее число компаний, в которые инвестировали фонды этой страны, основанные с 2010 по 2012 год включительно. Исключите страны с фондами, у которых минимальное число компаний, получивших инвестиции, равно нулю. 
Выгрузите десять самых активных стран-инвесторов: отсортируйте таблицу по среднему количеству компаний от большего к меньшему. Затем добавьте сортировку по коду страны в лексикографическом порядке.

SELECT country_code AS country,
MIN(invested_companies) AS min_comp,
MAX(invested_companies) AS max_comp,
AVG(invested_companies) AS avg_comp
FROM fund

WHERE EXTRACT(YEAR FROM founded_at) BETWEEN 2010 AND 2012 
GROUP BY country_code
HAVING MIN(invested_companies) > 0
ORDER BY avg_comp DESC, country asc 
LIMIT 10

11. Отобразите имя и фамилию всех сотрудников стартапов. Добавьте поле с названием учебного заведения, которое окончил сотрудник, если эта информация известна.
SELECT p.first_name,
p.last_name, 
instituition 
FROM people AS p
    left JOIN education AS e ON p.id = e.person_id
    
12. Для каждой компании найдите количество учебных заведений, которые окончили её сотрудники. Выведите название компании и число уникальных названий учебных заведений. Составьте топ-5 компаний по количеству университетов.

SELECT company.name,
COUNT(DISTINCT instituition)
FROM company
INNER JOIN people ON people.company_id = company.id
INNER JOIN education ON people.id = education.person_id
GROUP BY company.name
ORDER BY 2 DESC
LIMIT 5 


13. Составьте список с уникальными названиями закрытых компаний, для которых первый раунд финансирования оказался последним.
SELECT DISTINCT company.name
FROM company
    INNER JOIN funding_round AS fr ON fr.company_id = company.id
WHERE company.status = 'closed' AND (fr.is_first_round = 1 AND fr.is_last_round = 1
)

14. Составьте список уникальных номеров сотрудников, которые работают в компаниях, отобранных в предыдущем задании.
WITH 
t1 AS (SELECT DISTINCT company.id AS comp
FROM company
    INNER JOIN funding_round AS fr ON fr.company_id = company.id
WHERE company.status = 'closed' AND (fr.is_first_round = 1 AND fr.is_last_round = 1
))

SELECT DISTINCT people.id
FROM people
WHERE people.company_id IN (SELECT comp
FROM t1)

15. Составьте таблицу, куда войдут уникальные пары с номерами сотрудников из предыдущей задачи и учебным заведением, которое окончил сотрудник.

WITH 
t1 AS (SELECT DISTINCT company.id AS comp
FROM company
    INNER JOIN funding_round AS fr ON fr.company_id = company.id
WHERE company.status = 'closed' AND (fr.is_first_round = 1 AND fr.is_last_round = 1
))

SELECT DISTINCT people.id, instituition
FROM people
inner join education on education.person_id = people.id
WHERE people.company_id IN (SELECT comp
FROM t1)

16. Посчитайте количество учебных заведений для каждого сотрудника из предыдущего задания. При подсчёте учитывайте, что некоторые сотрудники могли окончить одно и то же заведение дважды.
WITH 
t1 AS (SELECT DISTINCT company.id AS comp
FROM company
    INNER JOIN funding_round AS fr ON fr.company_id = company.id
WHERE company.status = 'closed' AND (fr.is_first_round = 1 AND fr.is_last_round = 1
))

SELECT DISTINCT people.id, count(instituition)
FROM people
inner join education on education.person_id = people.id
WHERE people.company_id IN (SELECT comp
FROM t1)
group by people.id

17. Дополните предыдущий запрос и выведите среднее число учебных заведений (всех, не только уникальных), которые окончили сотрудники разных компаний. Нужно вывести только одну запись, группировка здесь не понадобится.
WITH 
t1 AS (SELECT DISTINCT company.id AS comp
FROM company
    INNER JOIN funding_round AS fr ON fr.company_id = company.id
WHERE company.status = 'closed' AND (fr.is_first_round = 1 AND fr.is_last_round = 1
))
select avg(inst)
from
(SELECT DISTINCT people.id, (count(instituition)) as inst
FROM people
inner join education on education.person_id = people.id
WHERE people.company_id IN (SELECT comp
FROM t1)
group by people.id) as t

18. Напишите похожий запрос: выведите среднее число учебных заведений (всех, не только уникальных), которые окончили сотрудники Facebook*.
*(сервис, запрещённый на территории РФ)

WITH 
t1 AS (SELECT DISTINCT company.id AS comp
FROM company
    INNER JOIN funding_round AS fr ON fr.company_id = company.id
WHERE company.status = 'closed' AND (fr.is_first_round = 1 AND fr.is_last_round = 1
))
select avg(inst)
from
(SELECT DISTINCT people.id, (count(instituition)) as inst
FROM people
inner join education on education.person_id = people.id
WHERE people.company_id IN (SELECT id
FROM company
WHERE name = 'Facebook')
group by people.id) as t

19. Составьте таблицу из полей:
* name_of_fund — название фонда;
* name_of_company — название компании;
* amount — сумма инвестиций, которую привлекла компания в раунде.
В таблицу войдут данные о компаниях, в истории которых было больше шести важных этапов, а раунды финансирования проходили с 2012 по 2013 год включительно.

SELECT fund.name AS name_of_fund,
 company.name AS name_of_company,
raised_amount as amount
FROM investment
INNER JOIN company ON investment.company_id = company.id
INNER JOIN fund ON fund.id = investment.fund_id
INNER JOIN funding_round ON funding_round.company_id = company.id AND investment.funding_round_id = funding_round.id
WHERE EXTRACT(YEAR FROM investment.created_at) BETWEEN 2012 AND 2013 
and (company.milestones > 6)

20. Выгрузите таблицу, в которой будут такие поля:
* название компании-покупателя;
* сумма сделки;
* название компании, которую купили;
* сумма инвестиций, вложенных в купленную компанию;
* доля, которая отображает, во сколько раз сумма покупки превысила сумму вложенных в компанию инвестиций, округлённая до ближайшего целого числа.
Не учитывайте те сделки, в которых сумма покупки равна нулю. Если сумма инвестиций в компанию равна нулю, исключите такую компанию из таблицы. 
Отсортируйте таблицу по сумме сделки от большей к меньшей, а затем по названию купленной компании в лексикографическом порядке. Ограничьте таблицу первыми десятью записями.

WITH 
comp_name_invest_bought AS (SELECT company.id AS bought_company_id,company.name AS bought_company_name,
SUM(company.funding_total) AS sum_total_invest_in_bought,
                           acquisition.id AS acq_id_1 
FROM company
    INNER JOIN acquisition ON acquisition.acquired_company_id =  company.id
GROUP BY company.id,acq_id_1
HAVING SUM(company.funding_total) > 0),
comp_buyer AS ( SELECT company.name AS company_buyer,
               price_amount AS sum_of_acquisition,
               acquisition.id AS acq_id_2 
               FROM company
               INNER JOIN acquisition ON acquisition.acquiring_company_id = company.id
               WHERE price_amount > 0
              )
SELECT comp_buyer.company_buyer,
comp_buyer.sum_of_acquisition,
bought_company_name,
sum_total_invest_in_bought,
ROUND(comp_buyer.sum_of_acquisition/sum_total_invest_in_bought)
FROM comp_name_invest_bought
    INNER JOIN comp_buyer ON comp_name_invest_bought.acq_id_1 = comp_buyer.acq_id_2 
ORDER BY 2 DESC, 3
LIMIT 10

21. Выгрузите таблицу, в которую войдут названия компаний из категории social, получившие финансирование с 2010 по 2013 год включительно. Проверьте, что сумма инвестиций не равна нулю. Выведите также номер месяца, в котором проходил раунд финансирования.

SELECT com.name AS com_name,
       EXTRACT(MONTH FROM fr.funded_at) AS month
FROM company AS com
LEFT JOIN funding_round AS fr ON com.id = fr.company_id
WHERE com.category_code = 'social'
      AND fr.raised_amount != 0
      AND EXTRACT(YEAR FROM funded_at) BETWEEN 2010 AND 2013;

22. Отберите данные по месяцам с 2010 по 2013 год, когда проходили инвестиционные раунды. Сгруппируйте данные по номеру месяца и получите таблицу, в которой будут поля:
* номер месяца, в котором проходили раунды;
* количество уникальных названий фондов из США, которые инвестировали в этом месяце;
* количество компаний, купленных за этот месяц;
* общая сумма сделок по покупкам в этом месяце.

WITH
fr AS (SELECT id,
           company_id,
           EXTRACT(MONTH FROM funded_at) AS month,
           raised_amount
       FROM funding_round
       WHERE EXTRACT(YEAR FROM funded_at) BETWEEN 2010 AND 2013)SELECT t1.month,
    t1.unique_count_usa,
    t2.count,
    t2.sum
FROM (SELECT fr.month,
               COUNT(DISTINCT t1.name) AS unique_count_usa
               FROM fr
               LEFT JOIN (SELECT *
                          FROM investment AS i
                          LEFT JOIN fund AS f ON f.id = i.fund_id
                          WHERE country_code = 'USA') AS t1 ON t1.funding_round_id = fr.id
               WHERE NOT t1.fund_id IS NULL
               GROUP BY fr.month) AS t1
LEFT JOIN (SELECT EXTRACT(MONTH FROM acquired_at) AS month,
           COUNT(id),
           SUM(price_amount)
           FROM acquisition AS a
           WHERE EXTRACT(YEAR FROM acquired_at) BETWEEN 2010 AND 2013
           GROUP BY month) AS t2 ON t2.month = t1.month

23. Составьте сводную таблицу и выведите среднюю сумму инвестиций для стран, в которых есть стартапы, зарегистрированные в 2011, 2012 и 2013 годах. Данные за каждый год должны быть в отдельном поле. Отсортируйте таблицу по среднему значению инвестиций за 2011 год от большего к меньшему.

WITH 
T1 AS (SELECT country_code,
       AVG(funding_total) AS avg_2011
       FROM company
       WHERE EXTRACT(YEAR FROM founded_at) = 2011
       GROUP BY country_code
)
, 

T2 AS (SELECT country_code,
       AVG(funding_total) AS avg_2012
       FROM company
       WHERE EXTRACT(YEAR FROM founded_at) = 2012
       GROUP BY country_code
),

T3 AS (SELECT country_code,
       AVG(funding_total) AS avg_2013
       FROM company
       WHERE EXTRACT(YEAR FROM founded_at) = 2013
       GROUP BY country_code
)
SELECT T1.country_code,avg_2011,avg_2012,avg_2013
FROM T1
INNER JOIN T2 ON  T1.country_code = T2.country_code
INNER JOIN T3 ON T3.country_code = T1.country_code
ORDER BY 2 DESC











