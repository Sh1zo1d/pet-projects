1. Найдите количество вопросов, которые набрали больше 300 очков или как минимум 100 раз были добавлены в «Закладки».
SELECT COUNT(*) 
FROM stackoverflow.posts
WHERE post_type_id= 1 AND (score > 300 OR favorites_count > 99 )

2. Сколько в среднем в день задавали вопросов с 1 по 18 ноября 2008 включительно? Результат округлите до целого числа.
WITH l1 AS 
(SELECT DISTINCT creation_date::date, COUNT(DISTINCT title) AS c1
FROM stackoverflow.posts
WHERE post_type_id = 1 AND (creation_date::date BETWEEN '2008-11-01' AND '2008-11-18')
GROUP BY creation_date::date)
SELECT ROUND(AVG(c1),0)
FROM l1

3. Сколько пользователей получили значки сразу в день регистрации? Выведите количество уникальных пользователей.
SELECT  COUNT(DISTINCT user_id)
FROM stackoverflow.users 
        JOIN stackoverflow.badges ON stackoverflow.badges.user_id = stackoverflow.users.id AND stackoverflow.badges.creation_date::date = stackoverflow.users.creation_date::date

4. Сколько уникальных постов пользователя с именем Joel Coehoorn получили хотя бы один голос?
SELECT COUNT(DISTINCT p.id)

FROM stackoverflow.posts AS p 
    JOIN stackoverflow.votes AS v ON p.id = v.post_id 
    JOIN stackoverflow.users AS u ON p.user_id = u.id
WHERE u.display_name = 'Joel Coehoorn' AND v.vote_type_id IS NOT NULL


5. Выгрузите все поля таблицы vote_types. Добавьте к таблице поле rank, в которое войдут номера записей в обратном порядке. Таблица должна быть отсортирована по полю id.

SELECT *, RANK() OVER (ORDER BY id DESC)
FROM stackoverflow.vote_types
ORDER BY id

6. Отберите 10 пользователей, которые поставили больше всего голосов типа Close. Отобразите таблицу из двух полей: идентификатором пользователя и количеством голосов. Отсортируйте данные сначала по убыванию количества голосов, потом по убыванию значения идентификатора пользователя.

SELECT DISTINCT v.user_id , COUNT(v.vote_type_id) OVER (PARTITION BY v.user_id)
FROM stackoverflow.votes AS v   JOIN
    stackoverflow.vote_types AS vt ON vt.id = v.vote_type_id
WHERE vt.name = 'Close'
ORDER BY 2 DESC,1 DESC
LIMIT 10

7. Отберите 10 пользователей по количеству значков, полученных в период с 15 ноября по 15 декабря 2008 года включительно.
Отобразите несколько полей:
* идентификатор пользователя;
* число значков;
* место в рейтинге — чем больше значков, тем выше рейтинг.
Пользователям, которые набрали одинаковое количество значков, присвойте одно и то же место в рейтинге.
Отсортируйте записи по количеству значков по убыванию, а затем по возрастанию значения идентификатора пользователя.

8. Сколько в среднем очков получает пост каждого пользователя?
Сформируйте таблицу из следующих полей:
* заголовок поста;
* идентификатор пользователя;
* число очков поста;
* среднее число очков пользователя за пост, округлённое до целого числа.
Не учитывайте посты без заголовка, а также те, что набрали ноль очков.



9. Отобразите заголовки постов, которые были написаны пользователями, получившими более 1000 значков. Посты без заголовков не должны попасть в список.
SELECT DISTINCT title
FROM stackoverflow.posts AS p JOIN
    stackoverflow.users AS u ON u.id = p.user_id JOIN
    stackoverflow.badges AS b ON b.user_id = u.id

WHERE title IS NOT NULL AND p.user_id IN (SELECT user_id
FROM stackoverflow.badges
GROUP BY user_id
HAVING COUNT(DISTINCT id) > 1000)



10. Напишите запрос, который выгрузит данные о пользователях из США (англ. United States). Разделите пользователей на три группы в зависимости от количества просмотров их профилей:
* пользователям с числом просмотров больше либо равным 350 присвойте группу 1;
* пользователям с числом просмотров меньше 350, но больше либо равно 100 — группу 2;
* пользователям с числом просмотров меньше 100 — группу 3.
Отобразите в итоговой таблице идентификатор пользователя, количество просмотров профиля и группу. Пользователи с нулевым количеством постов не должны войти в итоговую таблицу.

SELECT DISTINCT id,
views,
CASE 
    WHEN views >= 350 THEN 1
    WHEN views <350 AND views >= 100 THEN 2
    WHEN views < 100 THEN 3
END
FROM stackoverflow.users 
WHERE location LIKE '%United States%' AND views > 0



11. Дополните предыдущий запрос. Отобразите лидеров каждой группы — пользователей, которые набрали максимальное число просмотров в своей группе. Выведите поля с идентификатором пользователя, группой и количеством просмотров. Отсортируйте таблицу по убыванию просмотров, а затем по возрастанию значения идентификатора.

SELECT id,group_3,views
FROM 
(SELECT DISTINCT id, views,group_3, MAX(views) OVER (PARTITION BY group_3 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS maximum
FROM (SELECT DISTINCT id,
views,
(CASE 
    WHEN views >= 350 THEN 1
    WHEN views <350 AND views >= 100 THEN 2
    WHEN views < 100 THEN 3
END ) AS group_3
FROM stackoverflow.users 
WHERE location LIKE '%United States%' AND views > 0
) AS st) AS stt
WHERE views = maximum
ORDER BY 3 DESC, 1

12. Посчитайте ежедневный прирост новых пользователей в ноябре 2008 года. Сформируйте таблицу с полями:
* номер дня;
* число пользователей, зарегистрированных в этот день;
* сумму пользователей с накоплением.

13. Для каждого пользователя, который написал хотя бы один пост, найдите интервал между регистрацией и временем создания первого поста. Отобразите:
* идентификатор пользователя;
* разницу во времени между регистрацией и первым постом.























